# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   save_hello_world_output:
#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#     docker:
#       - image: circleci/node:13.8.0
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     steps:
#       - checkout
#       - run: echo "hello world" > ~/output.txt
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - output.txt

#REUSABLE JOB CODE
# commands:
#   print_pipeline_id:
#     steps:
#       - run: echo $CIRCLE_WORKFLOW_ID

# jobs:
#   my_cmd:
#     docker: 
#       - image: circleci/node:13.8.0
    
#     steps:
#       - print_pipeline_id 
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   cmd-workflow:
#     jobs:
#       - my_cmd

defaults: &defaults
  docker:
    - image: circleci/node:13.8.0
  # working_directory: ~/project

#JOB FAILURES
jobs:
  Exit_Non_zero:
    <<: *defaults
    steps:
      - run: return 1
      - run: 
          name: On failure
          command: curl --data fail_tests.log http://example.com/error_logs
          when: on_fail
workflows:
  cmd-workflow:
    jobs:
      - Exit_Non_zero
      # - JOB2
